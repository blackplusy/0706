1.面向对象基础
	a.面向对象和面向过程
		面向过程:分析解决问题所需要的步骤，使用函数把这些步骤一步一步实现，一个一个依次调用
		面向对象:构成问题的事物分解为各个对象，项目不是为了完成一个步骤，描述一个事务解决问题中的步骤行为
	b.面向对象的概念
		抽象描述
		万物皆对象
		分类思维
	c.面向对象中的类和对象
		类:具有相同的属性和方法的集合，定义集合中每个对象共有属性和方法
		类:
			好、坏
			男、女
			人、妖、仙
		对象:通过定义数据结构实例，某一个具体事物的存在，现实中可以直接使用
		对象:
			小甜甜
			牛魔王
			白晶晶
			菩提老祖
	d.面向对象三大特性
		封装:抽象到数据和行为的组合，目的是为了增强安全性，简化代码，不需要考虑具体细节
		常见情况:通过开源软件进行修改，封装成自己的软件
		继承:一个派生类继承基类的属性和方法
		唐sir:人有人他妈，yaoyouyaotama，xxxxx?
			人:
				父亲(单眼皮)  母亲(大个)  孩子(单眼皮、大个)
			妖怪:
				牛魔(坏)   小甜甜(机灵)   redhair(机灵、坏)
		多态:针对不同类型变量进行相同操作，表现出不同行为
			白骨精-----打-----哏了
			白龙马-----打-----核心成员     
2.类的定义及实例化
	a.类的定义的方法
		经典类
			class 类名:
				方法列表
		新式类
			class 类名(object):
				方法列表
	b.类的定义和对象的创建
3.__init__()构造方法
	a.使用方法(定义默认值)
		class 类:
			def __init__(self):
				属性
				方法列表
	b.调用
		简单理解就是初始化参数
		__init__()方法创建一个对象时候默认被调用，不需要手动调用
		__init__(self)第一个参数是self，如果创建对象时候需要传递2参数，那么在self后面跟俩参数
4.self
	可以理解为自己
	当作c++中指针，就是自己
	当某个对象调用其方法时候，python会把第一项作为参数传递给self，开发者只需要传递后面参数就可以
5.继承
	单继承
		一个类派生另外一个类，子类继承父类的属性和方法
	多继承
		子类继承多个父类属性和方法
	父类重写
		当子类中的方法和父类中的方法名字一致时候，子类会重写父类
6.多态
	多种形态，一个方法能表现出不同的形态，同一个操作方法针对不同对象产生不同的解释，不同结果
	+：多态
	
